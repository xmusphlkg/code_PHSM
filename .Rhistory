library(ggsci)
library(paletteer)
library(patchwork)
library(Cairo)
library(lubridate)
library(scales)
library(factoextra)
library(ggdendroplot)
remove(list = ls())
source('./script/theme_set.R')
# data --------------------------------------------------------------------
DataAll <- list.files(path = "./outcome/appendix/data/PHSMs/",
pattern = "*.xlsx",
full.names = TRUE)|>
lapply(read.xlsx, detectDates = T) |>
bind_rows()
datafile_class <- read.xlsx('./data/disease_class.xlsx')
datafile_class$diseasename <- factor(datafile_class$diseasename, levels = datafile_class$diseasename)
datafile_class$class <- factor(datafile_class$class, levels = unique(datafile_class$class))
DataAll <- DataAll |>
left_join(datafile_class,
by = c('disease_1' = 'diseaselist')) |>
mutate(
RR = value/mean
)
# plot --------------------------------------------------------------------
i <- 1
plot_rr <- function(i) {
Class <- unique(datafile_class$class)[i]
Data <- DataAll |>
filter(class == Class) |>
mutate(date = format(ymd(date), "%Y.%m"))
fill_value <- fill_color[1:length(unique(Data$diseasename))]
names(fill_value) <- unique(Data$diseasename)
fig1 <- ggplot(data = Data)+
geom_vline(xintercept = 1,
show.legend = F,
linetype = 'longdash')+
geom_boxplot(mapping = aes(y = diseasename,
x = RR,
fill = class))+
scale_y_discrete(limits = datafile_class$diseasename[datafile_class$class == Class])+
scale_x_continuous(limits = c(0, 3), breaks = 0:3)+
scale_fill_manual(values = fill_value[i])+
theme_bw()+
labs(x = NULL,
y = NULL,
title = paste0(LETTERS[2*i-1]),
fill = NULL)
fig2 <- ggplot(data = Data,
mapping = aes(fill = RR,
x = date,
y = diseasename))+
geom_tile()+
scale_fill_gradientn(colors = paletteer_d("awtools::a_palette"),
limits = c(0, 3))+
scale_x_discrete(breaks = paste(c(2020, 2021, 2022, 2023), "01", sep = '.'),
labels = 2020:2023,
expand = expansion(add = c(0, 0)))+
scale_y_discrete(limits = datafile_class$diseasename[datafile_class$class == Class],
expand = c(0, 0))+
theme_bw()+
theme(axis.text.y = element_blank(),
legend.position = 'bottom')+
guides(fill = guide_colourbar(barwidth = 20, barheight = 0.5, color = "black"))+
labs(x = NULL,
y = NULL,
title = paste0(LETTERS[2*i]))
fig1 + fig2 + plot_layout(widths = c(1, 3))
}
outcome <- lapply(1:4, plot_rr)
plot <- do.call(wrap_plots, c(outcome, ncol = 1, byrow = FALSE)) +
plot_layout(guides = 'collect') &
theme(legend.position = 'bottom')
# plot cluster ----------------------------------------------------------------
# cluster for RR
set.seed(20231021)
DataMat <- DataAll |>
select(value, date, diseasename) |>
pivot_wider(names_from = date,
values_from = value)
diseasename <- DataMat$diseasename
DataMat <- DataMat |>
select(-diseasename) |>
as.matrix()
rownames(DataMat) <- diseasename
DataMat <- scale(DataMat)
hcdata <- hkmeans(DataMat, 2)
# fig1 <- ggplot()+
#      geom_dendro(hcdata$hclust,
#                  dendrocut=max(hcdata[["hclust"]][["merge"]]),
#                  groupCols = c(fill_color[2:1], 'grey'))+
#      scale_y_continuous(trans = 'log10')+
#      coord_flip()+
#      theme_hm()+
#      theme(axis.text.x = element_blank(),
#            axis.text.y = element_text (colour = c(rep(fill_color[2], table(hcdata[["cluster"]])[1]),
#                                                   rep(fill_color[1], table(hcdata[["cluster"]])[2]))),
#            axis.ticks = element_blank(),
#            axis.title = element_blank())+
#      labs(title = 'I')
fig1 <- fviz_dend(hcdata,
cex = 0.6,
palette = "jama",
rect = TRUE,
rect_border = "jama",
rect_fill = TRUE,
main = 'I')+
# scale_y_continuous(trans = 'log10')+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank())
# cluster for report case
DataMat <- DataAll |>
select(RR, date, diseasename) |>
pivot_wider(names_from = date,
values_from = RR)
diseasename <- DataMat$diseasename
DataMat <- DataMat |>
select(-diseasename) |>
as.matrix()
rownames(DataMat) <- diseasename
DataMat <- scale(DataMat)
hcdata <- hkmeans(DataMat, 2)
# fig2 <- ggplot()+
#      geom_dendro(hcdata$hclust,
#                  dendrocut=max(hcdata[["hclust"]][["merge"]]),
#                  groupCols = c(fill_color[3:4], 'grey'))+
#      scale_y_continuous(trans = 'log10')+
#      coord_flip()+
#      theme_hm()+
#      theme(axis.text.x = element_blank(),
#            axis.text.y = element_text (colour = c(rep(fill_color[4], table(hcdata[["cluster"]])[2]),
#                                                   rep(fill_color[3], table(hcdata[["cluster"]])[1]))),
#            axis.ticks = element_blank(),
#            axis.title = element_blank())+
#      labs(title = 'J')
fig2 <- fviz_dend(hcdata,
cex = 0.6,
palette = "jama",
rect = TRUE,
rect_border = "jama",
rect_fill = TRUE,
main = 'J')+
# scale_y_continuous(trans = 'log10')+
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank())
plot1 <- fig1 | fig2
ggsave('./outcome/publish/fig4.pdf',
cowplot::plot_grid(plot, plot1, ncol = 1, rel_heights = c(2.2, 1)),
family = "Times New Roman",
limitsize = FALSE, device = cairo_pdf,
width = 14, height = 16)
2037.6+4754.4
2037.6+4754.4+8505
7179.62+20636.9
2037.6+4754.4+8505+2816.52
20000-18113.52
4140+7428+1680+9690+1020+3590+320+4570+920+5036
38394+18113.52+15000
38394+18113.52+25000
100000-38394
1886.48/0.8
install.packages("npts")
install.packages("nts")
install.packages("NTS")
?hclust
citation()
257.55-70-30-65-30
library(openxlsx)
library(tidyverse)
library(ggsci)
library(paletteer)
library(patchwork)
source('./script/theme_set.R')
scientific_10 <- function(x) {
parse(text = gsub("[+]", "", gsub("1e", "10^", scales::scientific_format()(x))))
}
datafile_analysis <- read.xlsx('./data/Nation.xlsx', detectDates = T) |>
filter(date >= as.Date('2008-1-1'))
datafile_class <- read.xlsx("./data/disease_class.xlsx", detectDates = T)
View(datafile_analysis)
split_date_1 <- as.Date("2019/12/15")
split_date_2 <- as.Date("2022/11/15")
split_date_3 <- as.Date("2023/3/15")
datafile_plot <- datafile_analysis |>
filter(disease_1 %in% datafile_class$diseaselist) |>
select(date, disease_1, value) |>
mutate(disease = factor(disease_1,
levels = datafile_class$diseaselist,
labels = datafile_class$diseasename),
phase = case_when(date < split_date_1 ~ 'Pre-epidemic Periods',
date > split_date_1 & date < split_date_2 ~ 'PHSMs Periods',
date > split_date_2 ~ 'Epidemic Periods',),
phase = factor(phase,
levels = c('Pre-epidemic Periods', 'PHSMs Periods', 'Epidemic Periods'))) |>
left_join(datafile_class, by = c('disease' = 'diseasename')) |>
mutate(class = factor(class,
levels = c("Blood borne and sexually transmitted diseases",
"Intestinal infectious diseases",
"Respiratory infectious disease",
"Natural focal disease")))
View(datafile_plot)
unique(datafile_plot$disease)
# packages ----------------------------------------------------------------
library(openxlsx)
library(tidyverse)
library(ggsci)
library(paletteer)
library(patchwork)
# data --------------------------------------------------------------------
source('./script/theme_set.R')
scientific_10 <- function(x) {
parse(text = gsub("[+]", "", gsub("1e", "10^", scales::scientific_format()(x))))
}
datafile_analysis <- read.xlsx('./data/Nation.xlsx', detectDates = T) |>
filter(date >= as.Date('2008-1-1'))
datafile_class <- read.xlsx("./data/disease_class.xlsx", detectDates = T)
split_date_1 <- as.Date("2019/12/15")
split_date_2 <- as.Date("2022/11/15")
split_date_3 <- as.Date("2023/3/15")
# bubble plot -------------------------------------------------------------
datafile_plot <- datafile_analysis |>
filter(disease_1 %in% datafile_class$diseaselist) |>
select(date, disease_1, value) |>
mutate(disease = factor(disease_1,
levels = datafile_class$diseaselist,
labels = datafile_class$diseasename),
phase = case_when(date < split_date_1 ~ 'Pre-epidemic Periods',
date > split_date_1 & date < split_date_2 ~ 'PHSMs Periods',
date > split_date_2 ~ 'Epidemic Periods',),
phase = factor(phase,
levels = c('Pre-epidemic Periods', 'PHSMs Periods', 'Epidemic Periods'))) |>
left_join(datafile_class, by = c('disease' = 'diseasename')) |>
mutate(class = factor(class,
levels = c("Blood borne and sexually transmitted diseases",
"Intestinal infectious diseases",
"Respiratory infectious disease",
"Natural focal disease")))
datafile_bubble <- datafile_plot |>
group_by(disease, class, level) |>
summarise(value = sum(value),
.groups = 'drop')
datafile_legend <- data.frame(
disease = LETTERS[1:4],
class = 'legend',
level = 'A',
value = c(2e4, 2e5, 2e6, 2.6e7)
)
write.csv(rbind(datafile_bubble, datafile_legend),
'./outcome/appendix/data/fig1_1.csv',
quote = F,
row.names = F)
unique(datafile_plot$disease)
sum(datafile_plot$value)
## each group
datafile_plot |>
group_by(disease) |>
summarise(count = sum(value),
.groups = 'drop') |>
mutate(percent = round(count/sum(count), 4))
## each group
datafile_plot |>
group_by(disease) |>
summarise(count = sum(value),
.groups = 'drop') |>
mutate(percent = round(count/sum(count), 4)) |>
arrange(count)
## each group
datafile_plot |>
group_by(disease) |>
summarise(count = sum(value),
.groups = 'drop') |>
mutate(percent = round(count/sum(count), 4)) |>
arrange(desc(count))
datafile_plot |>
group_by(class) |>
summarise(count = sum(value),
.groups = 'drop') |>
mutate(percent = round(count/sum(count), 4)) |>
arrange(desc(count))
## each group
datafile_plot |>
group_by(class, disease) |>
summarise(count = sum(value),
.groups = 'drop') |>
mutate(percent = round(count/sum(count), 4)) |>
arrange(desc(count))
datafile_plot |>
group_by(class) |>
summarise(count = sum(value),
.groups = 'drop') |>
mutate(percent = round(count/sum(count), 4)) |>
arrange(desc(count))
26.9+17.8+16.2+15.1
## total
sum(datafile_analysis$value[datafile_analysis$type == "inci"])
## total
sum(datafile_analysis$value[datafile_analysis$type == "inci"], na.rm = T)
## total
unique(datafile_analysis$value[datafile_analysis$type == "inci"])
## total
unique(datafile_analysis$disease_1[datafile_analysis$type == "inci"])
datafile_plot <- datafile_plot  |>
group_by(phase, date, class) |>
summarise(value = sum(value),
.groups = 'drop') |>
mutate(class = factor(class,
levels = unique(datafile_class$class)))
View(datafile_plot)
# packages ----------------------------------------------------------------
library(openxlsx)
library(tidyverse)
library(ggsci)
library(paletteer)
library(patchwork)
# data --------------------------------------------------------------------
source('./script/theme_set.R')
scientific_10 <- function(x) {
parse(text = gsub("[+]", "", gsub("1e", "10^", scales::scientific_format()(x))))
}
datafile_analysis <- read.xlsx('./data/Nation.xlsx', detectDates = T) |>
filter(date >= as.Date('2008-1-1'))
datafile_class <- read.xlsx("./data/disease_class.xlsx", detectDates = T)
split_date_1 <- as.Date("2019/12/15")
split_date_2 <- as.Date("2022/11/15")
split_date_3 <- as.Date("2023/3/15")
# bubble plot -------------------------------------------------------------
datafile_plot <- datafile_analysis |>
filter(disease_1 %in% datafile_class$diseaselist) |>
select(date, disease_1, value) |>
mutate(disease = factor(disease_1,
levels = datafile_class$diseaselist,
labels = datafile_class$diseasename),
phase = case_when(date < split_date_1 ~ 'Pre-epidemic Periods',
date > split_date_1 & date < split_date_2 ~ 'PHSMs Periods',
date > split_date_2 ~ 'Epidemic Periods',),
phase = factor(phase,
levels = c('Pre-epidemic Periods', 'PHSMs Periods', 'Epidemic Periods'))) |>
left_join(datafile_class, by = c('disease' = 'diseasename')) |>
mutate(class = factor(class,
levels = c("Blood borne and sexually transmitted diseases",
"Intestinal infectious diseases",
"Respiratory infectious disease",
"Natural focal disease")))
datafile_bubble <- datafile_plot |>
group_by(disease, class, level) |>
summarise(value = sum(value),
.groups = 'drop')
datafile_legend <- data.frame(
disease = LETTERS[1:4],
class = 'legend',
level = 'A',
value = c(2e4, 2e5, 2e6, 2.6e7)
)
write.csv(rbind(datafile_bubble, datafile_legend),
'./outcome/appendix/data/fig1_1.csv',
quote = F,
row.names = F)
# summary of NID ----------------------------------------------------------
## disease list
unique(datafile_plot$disease)
## total
sum(datafile_plot$value)
## each group
datafile_plot |>
group_by(class, disease) |>
summarise(count = sum(value),
.groups = 'drop') |>
mutate(percent = round(count/sum(count), 4)) |>
arrange(desc(count))
datafile_plot |>
group_by(class) |>
summarise(count = sum(value),
.groups = 'drop') |>
mutate(percent = round(count/sum(count), 4)) |>
arrange(desc(count))
# packages ----------------------------------------------------------------
library(openxlsx)
library(tidyverse)
library(ggsci)
library(paletteer)
library(patchwork)
# data --------------------------------------------------------------------
source('./script/theme_set.R')
scientific_10 <- function(x) {
parse(text = gsub("[+]", "", gsub("1e", "10^", scales::scientific_format()(x))))
}
datafile_analysis <- read.xlsx('./data/Nation.xlsx', detectDates = T) |>
filter(date >= as.Date('2008-1-1'))
datafile_class <- read.xlsx("./data/disease_class.xlsx", detectDates = T)
split_date_1 <- as.Date("2019/12/15")
split_date_2 <- as.Date("2022/11/15")
split_date_3 <- as.Date("2023/3/15")
# bubble plot -------------------------------------------------------------
datafile_plot <- datafile_analysis |>
filter(disease_1 %in% datafile_class$diseaselist) |>
select(date, disease_1, value) |>
mutate(disease = factor(disease_1,
levels = datafile_class$diseaselist,
labels = datafile_class$diseasename),
phase = case_when(date < split_date_1 ~ 'Pre-epidemic Periods',
date > split_date_1 & date < split_date_2 ~ 'PHSMs Periods',
date > split_date_2 ~ 'Epidemic Periods',),
phase = factor(phase,
levels = c('Pre-epidemic Periods', 'PHSMs Periods', 'Epidemic Periods'))) |>
left_join(datafile_class, by = c('disease' = 'diseasename')) |>
mutate(class = factor(class,
levels = c("Blood borne and sexually transmitted diseases",
"Intestinal infectious diseases",
"Respiratory infectious disease",
"Natural focal disease")))
datafile_bubble <- datafile_plot |>
group_by(disease, class, level) |>
summarise(value = sum(value),
.groups = 'drop')
datafile_legend <- data.frame(
disease = LETTERS[1:4],
class = 'legend',
level = 'A',
value = c(2e4, 2e5, 2e6, 2.6e7)
)
write.csv(rbind(datafile_bubble, datafile_legend),
'./outcome/appendix/data/fig1_1.csv',
quote = F,
row.names = F)
# summary of NID ----------------------------------------------------------
## disease list
unique(datafile_plot$disease)
## total
sum(datafile_plot$value)
## each group
datafile_plot |>
group_by(class, disease) |>
summarise(count = sum(value),
.groups = 'drop') |>
mutate(percent = round(count/sum(count), 4)) |>
arrange(desc(count))
datafile_plot |>
group_by(class) |>
summarise(count = sum(value),
.groups = 'drop') |>
mutate(percent = round(count/sum(count), 4)) |>
arrange(desc(count))
## natural focal disease in 2014.9-10
## natural focal disease in 2014.9-10
datafile_plot |>
filter(class == "Natural focal disease" &
date %in% as.Date(c('2014-08-01', '2014-09-01', "2014-10-01", "2014-11-01"))) |>
ggplot()+
geom_line(mapping = aes(x = date,
y = value,
color = disease))
datafile_plot |>
filter(class == "Natural focal disease" &
date %in% as.Date(c('2014-08-01', '2014-09-01', "2014-10-01", "2014-11-01")))
datafile_plot |>
filter(disease == "Dengue fever" &
date <= as.Date('2014-12-01') &
date >= as.Date('2013-11-01')) |>
ggplot()+
geom_line(mapping = aes(x = date,
y = value,
color = disease))
datafile_plot |>
filter(disease == "Dengue fever" &
date <= as.Date('2014-12-01') &
date >= as.Date('2013-11-01'))
datafile_plot |>
filter(disease == "Dengue fever" &
date <= as.Date('2014-12-01') &
date >= as.Date('2013-01-01')) |>
ggplot()+
geom_line(mapping = aes(x = date,
y = value,
color = disease))
datafile_plot |>
filter(disease == "Dengue fever" &
date <= as.Date('2014-12-01') &
date >= as.Date('2013-01-01'))
19178/1480 - 1
23525/1665 - 1
#####################################
## @Description:
## @version:
## @Author: Li Kangguo
## @Date: 2023-10-19 10:21:17
## @LastEditors: Li Kangguo
## @LastEditTime: 2023-10-19 12:07:03
#####################################
# packages ----------------------------------------------------------------
library(tidyverse)
library(openxlsx)
library(ggsci)
library(Cairo)
library(patchwork)
remove(list = ls())
source('./script/theme_set.R')
source('./script/ggplot.R')
# data --------------------------------------------------------------------
DataRaw <- read.xlsx("./outcome/appendix/model/index/pre-epidemic.xlsx")
DataRaw$Index <- rep(c("RMSE", "R-squared", "MAE"), times = nrow(DataRaw) / 3)
datafile_class <- read.xlsx("./data/disease_class.xlsx")
DataRaw$disease <- factor(DataRaw$disease, levels = datafile_class$diseasename)
# best model --------------------------------------------------------------
DataClean <- DataRaw |>
select(disease, Index, Method, Test) |>
pivot_wider(names_from = Index, values_from = Test)
View(DataClean)
